	<PG title="Text Match" name="matching text">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);  // handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.textMatch[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  // set up text stringsif (pageIcon.templateData.textMatch[projPI].correctMessage != undefined){ correctMessage = pageIcon.templateData.textMatch[projPI].correctMessage;} else {  correctMessage = "Correct answers are shown";}if (pageIcon.templateData.textMatch[projPI].submitBtnTxt != undefined){ submitBtnTxt = pageIcon.templateData.textMatch[projPI].submitBtnTxt;} else {  submitBtnTxt = "Submit";}if (pageIcon.templateData.textMatch[projPI].submitBtnTip != undefined){ submitBtnTip = pageIcon.templateData.textMatch[projPI].submitBtnTip;} else {  submitBtnTip = "Submit";}if (pageIcon.templateData.textMatch[projPI].submitBtnWidth != undefined){ submitBtnWidth = pageIcon.templateData.textMatch[projPI].submitBtnWidth;} else {  submitBtnWidth = "100";}if (pageIcon.templateData.textMatch[projPI].narration != undefined){  narration = pageIcon.templateData.textMatch[projPI].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS id="mainText" scrolling="auto" name="instruction" x="20" y="20" w="600" h="475" type="text"><![CDATA[{pageIcon.templateData.textMatch[projPI].text}]]></DIS>		<SCR name="build"><![CDATA[if (icon.built != true){  icon.nextSibling.childNodes[0].firstChild.duplicate(pageIcon.templateData.textMatch[projPI].sentence.length - 1);  icon.nextSibling.childNodes[1].firstChild.duplicate(pageIcon.templateData.textMatch[projPI].sentence.length - 1);  icon.nextSibling.childNodes[2].firstChild.duplicate(pageIcon.templateData.textMatch[projPI].sentence.length - 1);    for (i = 0; i < pageIcon.templateData.textMatch[projPI].sentence.length; i++){    icon.nextSibling.childNodes[1].childNodes[i].attributes.id = 'hint' + i;    icon.nextSibling.childNodes[2].childNodes[i].attributes.id = 'dd' + i;  }  icon.built = true;}tString = '';cString = '';tracking = new Array();for (i = 0; i < pageIcon.templateData.textMatch[projPI].sentence.length; i++){  tString += 'dd' + i + '~snap~0,';  cString += 'dd' + i + '~leave~0,';  tracking[i] = null;}]]></SCR>		<DEC name="pairs" repeat="all" branch="sequence" pause="0" erase="0" eraseOnExit="0">			<PG name="partOnes">				<DIS textColour="#333333" textSize="12" id="dd0" name="protoPartOne" x="20" y="mainText._y + mainText._height + 80 + (icon.index() * 60)" w="300" h="50" type="text"><![CDATA[{pageIcon.templateData.textMatch[projPI].sentence[icon.index()].p1}]]></DIS>				<SCR name="draw"><![CDATA[tempPG = icon.parentNode.clip();tempPG.lineStyle(0,0x000000,100);for (i = 0; i < tempPG.children.length; i++){  tempIC = icon.parentNode.clip().children[i];  tempIC.lineStyle(0,0x000000,100);  tempIC.beginFill(0xFFFFFF,100);  tempIC.drawRect(0,0,300,50);    tempPG.drawRect(340,tempIC._y, 300,50);}]]></SCR>			</PG>			<PG name="hints">				<DIS name="protoHint" x="340" y="mainText._y + mainText._height + 80 + (icon.index() * 60)" w="400" h="10" type="text"><![CDATA[]]></DIS>			</PG>			<PG name="partTwos">				<DIS textColour="#000000" textSize="12" name="protoPartTwo" x="340" y="mainText._y + mainText._height + 20" w="300" h="50" type="text"><![CDATA[{pageIcon.templateData.textMatch[projPI].sentence[icon.index()].p2}]]></DIS>				<SCR name="draw"><![CDATA[tempPG = icon.parentNode.clip();depths = new Array();for (i = 0; i < tempPG.children.length; i++){  depths[i] = i;}depths.randomize();for (i = 0; i < tempPG.children.length; i++){  tempIC = icon.parentNode.clip().children[i];  tempIC.lineStyle(0,0x000000,100);  tempIC.beginFill(0xFFFFCC,100);  tempIC.drawRect(0,0,300,50);    tempIC.swapDepths(depths[i]);}]]></SCR>			</PG>			<PG name="interaction">				<SCR name="buildInteraction"><![CDATA[//make the targetsif (icon.built != true){  icon.nextSibling.firstChild.duplicate(pageIcon.templateData.textMatch[projPI].sentence.length - 1);    for (i = 0; i < pageIcon.templateData.textMatch[projPI].sentence.length; i++){    icon.nextSibling.childNodes[i].attributes.dragItems = tString;  }  icon.built = true;  }icon.nextSibling.getChildByName('catchAll').attributes.dragItems = cString;]]></SCR>				<INT id="ddInt" name="mainInteraction" perpetual="0">					<RES name="protoTarget" type="targetArea" x="340" y="mainText._y + mainText._height + 80 + (icon.index() * 60)" w="300" h="50" dragItems="dd0~snap~0" erase="1" exit="0">						<SCR name="[Untitled]"><![CDATA[//remove the dropped item from trackingif (tracking.findValue(ddInt.objectDropped) != -1){  tracking[tracking.findValue(ddInt.objectDropped)] = null;}//put it in at the right indexif (tracking[icon.parentNode.index()] == null){  tracking[icon.parentNode.index()] = ddInt.objectDropped;} else {  ddInt.objectDropped.animate(340,mainText._y + mainText._height + 20,10,'linearTween');}]]></SCR>					</RES>					<RES name="catchAll" type="targetArea" x="0" y="0" w="800" h="600" dragItems="icon~action~endDrag" erase="1" exit="0">						<SCR name="[Untitled]"><![CDATA[if (tracking.findValue(ddInt.objectDropped) != -1){  tracking[tracking.findValue(ddInt.objectDropped)] = null;}]]></SCR>					</RES>					<RES w="submitBtnWidth" toolTip="{submitBtnTip}" rs="btnCheck" swf="templatePath + 'common/button.swf'" name="check" type="button" x="340" y="mainText._y + mainText._height + 80 + ((icon.index() - 1)* 60)" label="{submitBtnTxt}" erase="1" exit="0">						<DIS id="ticks" name="ticks" x="0" y="0" w="400" h="10" type="text"><![CDATA[]]></DIS>						<SCR name="check"><![CDATA[for (i = 0; i < tracking.length; i++){  if (tracking[i].XMLElement.index() != i){      tempPG.children[i].animate(340,mainText._y + mainText._height + 20,10,'linearTween');        if (tracking[i] != null){      _level0.engine['hint' + i].setText(pageIcon.templateData.textMatch[projPI].sentence[i].hint);    }        tracking[i] = null;      } else {      ticks.attachMovie('tick', 'tick' + i, 100 + i);    ticks['tick' + i]._x = 660;    ticks['tick' + i]._y = mainText._y + mainText._height + 90 + (i * 60);      }}]]></SCR>						<DIS name="fb" x="350 + parseInt(submitBtnWidth)" y="btnCheck._y" w="400" h="10" type="text"><![CDATA[{'<b>' + correctMessage + '</b>'}]]></DIS>					</RES>				</INT>			</PG>		</DEC>	</PG>