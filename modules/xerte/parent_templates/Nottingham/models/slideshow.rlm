	<PG title="Slideshow" name="slideshow">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);  // handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.slideshow[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  // set up text stringsif (pageIcon.templateData.slideshow[projPI].nextBtnTip != undefined){  nextBtnTip = pageIcon.templateData.slideshow[projPI].nextBtnTip;} else {  nextBtnTip = "Next Slide";}if (pageIcon.templateData.slideshow[projPI].priorBtnTip != undefined){  priorBtnTip = pageIcon.templateData.slideshow[projPI].priorBtnTip;} else {  priorBtnTip = "Previous Slide";}if (pageIcon.templateData.slideshow[projPI].slideCount != undefined){  slideCount = pageIcon.templateData.slideshow[projPI].slideCount;} else {  slideCount = "Slide {i} of {n}";}itemCount = pageIcon.templateData.slideshow[projPI].nestedPage.length);panelWidth = pageIcon.templateData.slideshow[projPI].panelWidth;if (panelWidth == "Small"){  panelW = 300;  textW = 440;} else if (panelWidth == "Medium"){  panelW = 450;  textW = 290;} else if (panelWidth == "Large"){  panelW = 600;  textW = 150;} else {  panelW = 760;  textW = 0;}if (pageIcon.templateData.slideshow[projPI].narration != undefined){  narration = pageIcon.templateData.slideshow[projPI].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS initObject="{_alpha: subPageAccess == true ? 20 : 100}" h="474" w="panelW" tabIndex="-1" id="panel" name="panel" x="780 - panelW" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<INT name="loadPanel" perpetual="0">			<RES name="onLoad" type="event" eventName="onLoad" icon="panel" erase="1" exit="1">				<SCR name="calculate"><![CDATA[//ok to move on]]></SCR>			</RES>		</INT>		<DIS scrolling="auto" id="textBlock" h="480" name="text" x="20" y="20" w="textW" type="text"><![CDATA[{pageIcon.templateData.slideshow[projPI].text}]]></DIS>		<SCR name="makePages"><![CDATA[if (icon.attributes.built != 'true'){  icon.nextSibling.childNodes[1].duplicate(itemCount - 1);  icon.attributes.built = 'true';}icon.nextSibling.firstChild.attributes.rs = 'initButton';]]></SCR>		<FW id="slideFW" name="slideFW">			<FW_ENT name="controls">				<SCR name="subPageAccess"><![CDATA[if (subPageAccess == true){  icon.nextSibling.attributes.textColour = STYLES.defaultColour;} else {  icon.nextSibling.attributes.textColour = '#333333';}]]></SCR>				<DIS textColour="#333333" id="orientation" name="orientation" x="panel._x + 20" y="panel._y + panel._height - 25" w="panel._width - 60" h="10" type="text"><![CDATA[]]></DIS>				<SCR name="[Untitled]"><![CDATA[slideLabel = slideCount;slideLabel = replace(slideLabel, "{i}", slideFW.currentPage + 1);slideLabel = replace(slideLabel, "{n}", slideFW.pageCount);orientation.setText('<b>' + slideLabel + '</b>');  ]]></SCR>				<INT id="tabs" name="tabInteraction" perpetual="0">					<RES toolTip="{priorBtnTip}" swf="templatePath + 'common/leftButton.swf'" name="back" type="button" x="725" y="470" label="previous slide" erase="1" exit="0">						<SCR name="[Untitled]"><![CDATA[slideFW.prevPage();]]></SCR>					</RES>					<RES toolTip="{nextBtnTip}" swf="templatePath + 'common/rightButton.swf'" name="next" type="button" x="750" y="470" label="next" erase="1" exit="0">						<SCR name="[Untitled]"><![CDATA[slideFW.nextPage();]]></SCR>					</RES>					<RES name="[Untitled]" type="event" eventName="onOpenPage" icon="slideFW" erase="1" exit="0">						<SCR name="[Untitled]"><![CDATA[slideLabel = slideCount;slideLabel = replace(slideLabel, "{i}", slideFW.currentPage + 1);slideLabel = replace(slideLabel, "{n}", slideFW.pageCount);orientation.setText('<b>' + slideLabel + '</b>');  ]]></SCR>					</RES>				</INT>			</FW_ENT>			<PG name="protoPage">				<SCR name="setSize"><![CDATA[if (subPageAccess == true){  icon.nextSibling.attributes.textColour = STYLES.defaultColour;} else {  icon.nextSibling.attributes.textColour = '#333333';}gIcon = icon.parentNode.getChildByName('graphic'); if (pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].url != undefined){  if (pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].controls == 'Control Bar'){    gIcon.attributes.controls = '1';    }  if (pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].tip != undefined){    gIcon.attributes.toolTip = pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].tip;    gIcon.firstChild.nodeValue = '{' + pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].tip + '}';  }  } else { //no graphic  gIcon.removeNode();  icon.parentNode.getChildByName('loadGraphic&Resize').removeNode();  textH = 413;}]]></SCR>				<DIS id="graphic" name="protoGraphic" x="0" y="40" type="ext" url="{pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].url}"><![CDATA[]]></DIS>				<INT name="loadGraphic&Resize" perpetual="0">					<RES name="onLoad" type="event" eventName="onLoad" icon="graphic" erase="1" exit="1">						<SCR name="resize&Position"><![CDATA[graphic.constrain(panelW - 40, 300);textH = 393 - graphic._height;if (pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.parentNode.parentNode.index() - 1].initObject != undefined){  obj = expression(pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.parentNode.parentNode.index() - 1].initObject, engine);  graphic.clip.init(obj);}]]></SCR>					</RES>				</INT>				<DIS scrolling="auto" textColour="#333333" id="desc" name="protoText" x="panel._x + 20" y="40" w="panelW - 40" h="textH" type="text"><![CDATA[{'<b>' + pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].name + '</b><br>' + pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].text}]]></DIS>				<SCR name="pos"><![CDATA[if (pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].url != undefined){    if (pageIcon.templateData.slideshow[projPI].nestedPage[icon.parentNode.index() - 1].align == 'Bottom'){    desc._y = 40 + graphic._height + 20;    graphic._y = 40;  } else {    graphic._y = desc._y + desc._height + 20;  }  graphic._x = panel._x + panel._width / 2 - graphic._width / 2;}]]></SCR>			</PG>		</FW>	</PG>