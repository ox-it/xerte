	<PG title="Timeline" name="timeline">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);  // handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.timeline[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  // set up text stringsif (pageIcon.templateData.timeline[projPI].checkBtnTxt != undefined){  checkBtnTxt = pageIcon.templateData.timeline[projPI].checkBtnTxt;} else {  checkBtnTxt = "Check";}if (pageIcon.templateData.timeline[projPI].checkBtnTip != undefined){  checkBtnTip = pageIcon.templateData.timeline[projPI].checkBtnTip;} else {  checkBtnTip = "Check Answer";}if (pageIcon.templateData.timeline[projPI].checkBtnWidth != undefined){  checkBtnWidth = pageIcon.templateData.timeline[projPI].checkBtnWidth;} else {  checkBtnWidth = "100";}currentIndex = -1;icon.nextSibling.nextSibling.attributes.textSize = pageIcon.templateData.timeline[projPI].size;col = pageIcon.templateData.annotatedDiagram[0].colour;if (pageIcon.templateData.timeline[projPI].narration != undefined){  narration = pageIcon.templateData.timeline[projPI].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS h="474" w="760" tabIndex="-1" id="panel" name="panel" x="20" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<DIS tabIndex="80" textColour="#333333" id="desc" name="description" x="40" y="40" w="500" h="10" type="text"><![CDATA[{pageIcon.templateData.timeline[projPI].text}]]></DIS>		<SCR name="buildInteraction"><![CDATA[if (icon.attributes.built != 'true'){  dateCount = pageIcon.templateData.timeline[projPI].timelinedate.length;  icon.nextSibling.firstChild.duplicate(dateCount - 1);  icon.nextSibling.nextSibling.firstChild.duplicate(dateCount - 1);  icon.attributes.built = 'true'}//create the dragItems string fo the interactionddStr = "";tracking = new Array();for (i = 0; i < dateCount; i++){  tracking[i] = -1;  ddStr += 'dd' + i + '~snap~0,';}initY = desc._y + desc._height + 20;tabManager = new Array();dragTargets = new Array();dragLabels = new Array();maxLabelH = 0;maxTargetH = 0;]]></SCR>		<DEC id="targets" name="targets" repeat="all" branch="sequence" pause="0" erase="0" eraseOnExit="0">			<PG name="protoTarget">				<SCR name="setID"><![CDATA[icon.nextSibling.attributes.id = 'tgt' + icon.parentNode.index();]]></SCR>				<DIS tabIndex="-1" id="protoTarget" name="protoTarget" x="40 + (Math.floor(icon.parentNode.index()%4) * 190" y="Math.floor(icon.parentNode.index() / 4) * 100 + initY" w="150" h="10" type="text"><![CDATA[{pageIcon.templateData.timeline[projPI].timelinedate[icon.parentNode.index()].name}]]></DIS>				<SCR name="drawTargets"><![CDATA[tempIc = icon.previousSibling.clip();tempTF = tempIc.txt.getTextFormat();tempTF.align = "center";tempIc.txt.setTextFormat(tempTF);if (tempIc._height > maxTargetH){  maxTargetH = tempIc._height;}dragTargets.push(tempIc);]]></SCR>			</PG>		</DEC>		<DEC id="labels" name="labels" repeat="all" branch="randomUnused" pause="0" erase="0" eraseOnExit="0">			<PG name="protoLabel">				<SCR name="setID"><![CDATA[icon.nextSibling.attributes.id = 'dd' + (labels.repCount - 1);]]></SCR>				<DIS tabIndex="-1" textColour="#000000" id="protoLabel" name="protoLabel" x="560 + icon.parentNode.index() * 2" y="40 + icon.parentNode.index() * 2" w="140" h="10" type="text"><![CDATA[{pageIcon.templateData.timeline[projPI].timelinedate[labels.repCount - 1].text}]]></DIS>				<SCR name="drawLabels"><![CDATA[tempIc = icon.previousSibling.clip();tempTF = tempIc.txt.getTextFormat();tempTF.align = "center";tempIc.txt.setTextFormat(tempTF);tempIc.index = labels.repCount - 1;icon.parentNode.clip().swapDepths(dateCount - icon.parentNode.index());tabManager[dateCount - icon.parentNode.index()] = tempIc;if (tempIc._height > maxLabelH){  maxLabelH = tempIc._height;}dragLabels.push(tempIc);]]></SCR>			</PG>		</DEC>		<SCR name="setupInteraction"><![CDATA[icon.nextSibling.firstChild.attributes.dragItems = ddStr;if (icon.attributes.built != "true"){  icon.nextSibling.firstChild.duplicate(dateCount - 1);  for (i = 0; i < dateCount; i++){    icon.nextSibling.childNodes[i].attributes.name = pageIcon.templateData.timeline[projPI].timelinedate[i].name;  }  icon.attributes.built = "true";}matched = 0;tabManager[tabManager.length - 1].tabIndex = 100 + dateCount + 1;//layoutfor (i = 0; i < dragTargets.length; i++){  dragTargets[i]._y = initY + Math.floor(i / 4) * (maxLabelH + maxTargetH + 40) + maxLabelH;  dragTargets[i].txt._y = maxTargetH - dragTargets[i].txt._height + 5;}//draw labelsfor (i = 0; i < dragLabels.length; i++){    dragLabels[i].beginFill(0xFFFFCC,100);  dragLabels[i].lineStyle(1,0x666666,100);  dragLabels[i].drawRect(0,0,140,maxLabelH + 4);}//draw targetsfor (i = 0; i < dragTargets.length; i++){      dragTargets[i].beginFill(STYLES.fillColour,100);  dragTargets[i].lineStyle(1,STYLES.statusBarColour,100);  dragTargets[i].drawRect(0,maxLabelH*-1 - 10,150,15 + maxLabelH + maxTargetH);    if (pageIcon.templateData.timeline[projPI].interactivity != "Matching Pairs"){        if (Math.floor(i % 4) != 3 && i != dateCount - 1){      dragTargets[i].lineStyle(1,0x333333,100);      dragTargets[i].beginFill(0x333333,100);      dragTargets[i].arrowTo(150,-15,190,-15,12);    }  }} ]]></SCR>		<INT id="ddInt" name="mainInteraction" perpetual="0">			<RES name="protoTarget" type="targetArea" x="engine['tgt' + icon.index()]._x " y="engine['tgt' + icon.index()]._y - maxLabelH" w="150" h="maxLabelH" dragItems="dd0~snap~0" erase="1" exit="0">				<SCR name="handleDrop"><![CDATA[tracking[icon.parentNode.index()] = ddInt.objectDropped.index;ddInt.objectDropped.tabIndex = -1;matched++;tabManager[dateCount - matched].tabIndex = 101 + dateCount;]]></SCR>			</RES>			<RES name="onStartDrag" type="event" eventName="onStartDrag" icon="ddInt" erase="1" exit="0">				<SCR name="swapDepths"><![CDATA[ddInt.objectDragged._parent.swapDepths(999);if (tracking.findValue(ddInt.objectDragged.index) != -1){  tracking[ddInt.objectDragged.index] = -1;}]]></SCR>			</RES>			<RES toolTip="{checkBtnTip}" rs="btnCheck" w="checkBtnWidth" swf="templatePath + 'common/button.swf'" name="checkAnswers" type="button" x="40" y="dragTargets[dragTargets.length - 1]._y + maxTargetH + 20" label="{checkBtnTxt}" erase="1" exit="0">				<DIS tabIndex="-1" id="fb" name="ticks" x="0" y="0" w="480" h="10" type="text"><![CDATA[]]></DIS>				<SCR name="check"><![CDATA[for (i = 0; i < tracking.length; i++){  if (tracking[i] == i){    fb.attachMovie('tick', 'tick' + i, i);    fb['tick' + i]._x = engine['tgt' + i]._x + 130;    fb['tick' + i]._y = engine['tgt' + i]._y;  }}]]></SCR>				<DIS textColour="#333333" transition="wipe('in',0.5,'None','easeNone');" name="feedbackText" x="btnCheck._x + 20 + parseInt(checkBtnWidth)" y="btnCheck._y" w="760 - (btnCheck._x + 20 + parseInt(checkBtnWidth)" h="40" type="text"><![CDATA[{pageIcon.templateData.timeline[projPI].feedback}]]></DIS>			</RES>		</INT>	</PG>