	<PG title="Dialog" name="dialog">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);// handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.dialog[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  // setup display textif (pageIcon.templateData.dialog[projPI].tryTxt != undefined){  tryTxt = pageIcon.templateData.dialog[projPI].tryTxt;} else {  tryTxt = "Try again";}if (pageIcon.templateData.dialog[projPI].correctTxt != undefined){  correctTxt = pageIcon.templateData.dialog[projPI].correctTxt;} else {  correctTxt = "The correct answer is shown.";}if (pageIcon.templateData.dialog[projPI].moveOnTxt != undefined){  moveOnTxt = pageIcon.templateData.dialog[projPI].moveOnTxt;} else {  moveOnTxt = "Press enter to move on.";}STYLES.inputSize = STYLES.defaultSize;initY = 40;if (pageIcon.templateData.dialog[projPI].narration != undefined){  narration = pageIcon.templateData.dialog[projPI].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS h="474" w="540" tabIndex="-1" id="panel" name="panel" x="240" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<DIS h="475" scrolling="auto" name="text" x="20" y="20" w="200" type="text"><![CDATA[{pageIcon.templateData.dialog[projPI].text}]]></DIS>		<SCR name="makeQuestions"><![CDATA[if (icon.attributes.built != "true"){  icon.nextSibling.firstChild.duplicate(pageIcon.templateData.dialog[projPI].dialogStep.length - 1);  icon.attributes.built = "true";}]]></SCR>		<DEC id="dlg" name="questions" repeat="all" branch="sequence" pause="1" erase="0" eraseOnExit="0">			<PG name="protoQuestion">				<DIS textColour="#333333" id="qt" name="questionText" x="panel._x + 20" y="initY" w="300" h="10" type="text"><![CDATA[{pageIcon.templateData.dialog[projPI].dialogStep[icon.parentNode.index()].question}]]></DIS>				<INT id="curInt" name="interaction" perpetual="1">					<RES rs="te" name="textEntry" type="textEntry" x="560" y="initY + qt._height - 18" w="200" h="100" phrase="*" scrolling="0" border="1" erase="1" exit="0">						<SCR name="checkAnswer"><![CDATA[ans = te.text.toLowerCase();sep = ',';if (pageIcon.templateData.dialog[projPI].answerDelimeter != undefined){  sep = pageIcon.templateData.dialog[projPI].answerDelimeter;}answers = pageIcon.templateData.dialog[projPI].dialogStep[dlg.getPageIndex()].answer.toLowerCase().split(sep);fb="";feedback.setText("");attempts++;initY = te._y + te._height + 10;if (answers.findValue(ans) != -1 || answers[0] == '*'){  te.border = false;  te.type = "dynamic";  Key.removeListener(te);  curInt.attachMovie('tick', 'tick',99);  curInt.tick._x = 760;  curInt.tick._y = te._y;  dlg.nextPage();} else {  fb = tryTxt;  if (attempts == pageIcon.templateData.dialog[projPI].attempts){    //attempts reached. show a hint    fb = pageIcon.templateData.dialog[projPI].dialogStep[dlg.getPageIndex()].hint;  }  if (attempts >= Number(pageIcon.templateData.dialog[projPI].attempts) + 1){    //still no dice. Show the right answer    te.text = answers[0];    fb = correctTxt;    if (dlg.getPageIndex() < dlg.pages.length - 1){      fb += "<br><br>" + moveOnTxt;    }    te.type = "dynamic";  }  Selection.setFocus(te);}]]></SCR>						<DIS id="feedback" name="fb" x="te._x" y="te._y + te._height + 20" w="te._width" h="10" type="text"><![CDATA[{fb}]]></DIS>					</RES>				</INT>				<SCR name="setup"><![CDATA[te.background = true;te.backgroundColor = 0xFFFFCC;te._height = 100;Selection.setFocus(te);attempts = 0;]]></SCR>			</PG>		</DEC>	</PG>