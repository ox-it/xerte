	<PG title="Interactive List" name="interactiveList">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);  // handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.list[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  if (pageIcon.templateData.list[projPI].narration != undefined){  narration = pageIcon.templateData.list[projPI].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS id="textBlock" h="10" name="text" x="20" y="20" w="350" type="text"><![CDATA[{pageIcon.templateData.list[projPI].text}]]></DIS>		<SCR name="makeList"><![CDATA[if (icon.built != 'true'){  icon.nextSibling.firstChild.firstChild.duplicate(pageIcon.templateData.list[projPI].nestedPage.length - 1);    for (i = 0; i < pageIcon.templateData.list[projPI].nestedPage.length; i++){    icon.nextSibling.firstChild.childNodes[i].attributes.id = 'item' + i;  }    icon.built = 'true';}]]></SCR>		<DEC name="listItems" repeat="all" branch="sequence" pause="0" erase="0" eraseOnExit="0">			<PG name="mainInteraction">				<DIS id="proto" name="protoListItem" x="20" y="icon.index() == 0 ? textBlock._y + textBlock._height + 20 : _ytile" w="380" h="10" type="text"><![CDATA[{'<b>' + pageIcon.templateData.list[projPI].nestedPage[icon.index()].name + '</b>'}]]></DIS>				<SCR name="buildInteraction"><![CDATA[if (icon.built != true){  icon.nextSibling.firstChild.duplicate(pageIcon.templateData.list[projPI].nestedPage.length - 1);    for (i = 0; i < pageIcon.templateData.list[projPI].nestedPage.length; i++){    icon.nextSibling.childNodes[i].attributes.rs = 'item' + i;  }  icon.built = true;}]]></SCR>				<INT id="listItems" name="listItems" perpetual="1">					<RES name="protoItem" type="hotObject" rs="item0" click="1" cursor="1" erase="1" exit="0">						<SCR name="image"><![CDATA[listItems.clear();listItems.lineStyle(1, STYLES.statusBarColour, 100);listItems.beginFill(0xFFFFFF,100);item.setText('<b>' + pageIcon.templateData.list[projPI].nestedPage[item.XMLElement.index()].name + '</b>');item = eval(icon.parentNode.attributes.rs);listItems.moveTo(20,item._y);listItems.lineTo(400, item._y);listItems.lineTo(400, 20);listItems.lineTo(780, 20);listItems.lineTo(780, 496);listItems.lineTo(400, 496);listItems.lineTo(400, item._y + item._height);listItems.lineTo(20, item._y + item._height);item.setText('<b><font color="#333333">' + pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].name + '</font></b>');]]></SCR>						<DIS textColour="#333333" id="desc" name="text" x="405" y="25" w="370" h="10" type="text"><![CDATA[{pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].text}]]></DIS>						<DIS toolTip="{pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].tip}" id="graphic" name="graphic" x="desc._x" y="desc._y + desc._height + 10" type="ext" url="{pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].url}"><![CDATA[{pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].tip}]]></DIS>						<INT name="loadImage" perpetual="0">							<RES name="onLoad" type="event" eventName="onLoad" icon="graphic" erase="1" exit="0">								<SCR name="resize"><![CDATA[space = 456 - desc._height;graphic.constrain(370, space);graphic._x = 590 - graphic._width / 2; if (pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].initObject != undefined){  obj = expression(pageIcon.templateData.list[projPI].nestedPage[icon.parentNode.index()].initObject, engine);  graphic.clip.init(obj);}]]></SCR>							</RES>						</INT>					</RES>				</INT>				<SCR name="swapDepths"><![CDATA[listItems.swapDepths(0);]]></SCR>			</PG>		</DEC>	</PG>