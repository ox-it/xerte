	<PG title="Model Answer" name="modelAnswer">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);  // handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.modelAnswer[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  // set up text stringsif (pageIcon.templateData.modelAnswer[projPI].feedbackBtnTxt != undefined){  feedbackBtnTxt = pageIcon.templateData.modelAnswer[projPI].feedbackBtnTxt;} else {    feedbackBtnTxt = "Feedback";}if (pageIcon.templateData.modelAnswer[projPI].feedbackBtnTip != undefined){  feedbackBtnTip = pageIcon.templateData.modelAnswer[projPI].feedbackBtnTip;} else {  feedbackBtnTip = "Feedback";}if (pageIcon.templateData.modelAnswer[projPI].feedbackBtnWidth != undefined){  feedbackBtnWidth = pageIcon.templateData.modelAnswer[projPI].feedbackBtnWidth;} else {  feedbackBtnWidth = "80";}if (pageIcon.templateData.modelAnswer[projPI].instructHeaderATxt != undefined){  instructHeaderATxt = pageIcon.templateData.modelAnswer[projPI].instructHeaderATxt;} else {  instructHeaderATxt = "The instruction and question on page";}if (pageIcon.templateData.modelAnswer[projPI].instructHeaderBTxt != undefined){  instructHeaderBTxt = pageIcon.templateData.modelAnswer[projPI].instructHeaderBTxt;} else {  instructHeaderBTxt = "was";}if (pageIcon.templateData.modelAnswer[projPI].responseHeaderTxt != undefined){  responseHeaderTxt = pageIcon.templateData.modelAnswer[projPI].responseHeaderTxt;} else {  responseHeaderTxt = "Your response was:";}if (pageIcon.templateData.modelAnswer[projPI].noAnswerHeaderTxt != undefined){  noAnswerHeaderTxt = pageIcon.templateData.modelAnswer[projPI].noAnswerHeaderTxt;} else {  noAnswerHeaderTxt = "You didn't answer this question.";}if (pageIcon.templateData.modelAnswer[projPI].exampleHeaderTxt != undefined){  exampleHeaderTxt = pageIcon.templateData.modelAnswer[projPI].exampleHeaderTxt;} else {  exampleHeaderTxt = "The example answer was:";}align = pageIcon.templateData.modelAnswer[projPI].align;panelWidth = pageIcon.templateData.modelAnswer[projPI].panelWidth;if (panelWidth == "Small"){  panelW = 300;  textW = 440;} else if (panelWidth == "Medium"){  panelW = 450;  textW = 290;} else if (panelWidth == "Large"){  panelW = 600;  textW = 150;} else {  panelW = 760;  textW = 0;}if (pageIcon.templateData.modelAnswer[projPI].narration != undefined){  narration = pageIcon.templateData.modelAnswer[projPI].narration;  rootIcon.broadcast('showAudio');}if (mytracking == undefined){   mytracking = new Array();}]]></SCR>		<DIS w="panelW" h="474" tabIndex="-1" id="panel" name="panel" x="align == 'Right' ? 20 : 780 - panelW" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<INT name="loadPanel" perpetual="0">			<RES name="onLoad" type="event" eventName="onLoad" icon="panel" erase="1" exit="1">				<SCR name="calculate"><![CDATA[//ok to move on]]></SCR>			</RES>		</INT>		<DIS name="instruction" x="align == 'Right' ? 40 + panelW : 20" y="panel._y" w="740 - panelW" h="10" type="text"><![CDATA[{pageIcon.templateData.modelAnswer[projPI].text}]]></DIS>		<DIS textColour="#333333" id="prpt" name="question" x="panel._x + 20" y="panel._y + 20" w="panelW - 40" h="10" type="text"><![CDATA[{pageIcon.templateData.modelAnswer[projPI].prompt}]]></DIS>		<SCR name="setupImage"><![CDATA[if (pageIcon.templateData.modelAnswer[projPI].image == undefined && icon.built != 'true'){  icon.built = 'true';  icon.parentNode.getChildByName("optionalImage").removeNode();  icon.parentNode.getChildByName("loadImage").removeNode();}nextY = prpt._y + prpt._height + 20;]]></SCR>		<DIS toolTip="{pageIcon.templateData.modelAnswer[projPI].tooltip}" id="img" name="optionalImage" x="prpt._x" y="prpt._y + prpt._height + 20" type="ext" url="{pageIcon.templateData.modelAnswer[projPI].image}"><![CDATA[]]></DIS>		<INT name="loadImage" perpetual="0">			<RES name="onLoad" type="event" eventName="onLoad" icon="img" erase="1" exit="1">				<SCR name="size"><![CDATA[//img.constrain(prpt._width, prpt._width);//commented the above and set max height to 100img.constrain(prpt._width, 180);nextY = nextY + img._height + 20;]]></SCR>			</RES>		</INT>		<INT name="text entry" perpetual="1">			<RES id="textentry" rs="myrs" background="0xFFFFFF" name="textentry" type="textEntry" x="prpt._x" y="nextY" w="prpt._width" h="100" phrase="" scrolling="1" border="1" erase="0" exit="0">				<SCR name="track"><![CDATA[mytracking[rootIcon.currentPage] = myrs.text;]]></SCR>				<SCR name="remember text entry"><![CDATA[//create the array if not yet createdif (compareanswerresults == undefined){   compareanswerresults = new Array();}//build the combined resultscompareanswercombined= instructHeaderATxt + " " + (rootIcon.currentPage+1) + " " + instructHeaderBTxt + " " + chr(13)+chr(10);compareanswercombined=compareanswercombined+pageIcon.templateData.modelAnswer[projPI].text+" "+chr(13)+chr(10)+chr(13)+chr(10);compareanswercombined=compareanswercombined+pageIcon.templateData.modelAnswer[projPI].prompt+" "+chr(13)+chr(10)+chr(13)+chr(10);compareanswercombined=compareanswercombined + responseHeaderTxt + " " +chr(13)+chr(10);//if the current question has been answered add response to combined result //but if not add you didn't answer this questionif (mytracking[rootIcon.currentPage]!=undefined){  compareanswercombined=compareanswercombined+mytracking[rootIcon.currentPage]+" "+chr(13)+chr(10)+chr(13)+chr(10);}else{compareanswercombined=compareanswercombined+" "+ noAnswerHeaderTxt + " "+chr(13)+chr(10)+chr(13)+chr(10);}compareanswercombined=compareanswercombined + exampleHeaderTxt + " "+chr(13)+chr(10);compareanswercombined=compareanswercombined+pageIcon.templateData.modelAnswer[projPI].feedback+" "+chr(13)+chr(10)+chr(13)+chr(10);compareanswercombined=compareanswercombined+" ----------------------------------------------------------- "+chr(13)+chr(10)+chr(13)+chr(10);compareanswerresults[(rootIcon.currentPage)]=compareanswercombined;//initailize variabledisplaycompareanswerresults="";//loop through array and only add to var if not undefinedfor (i = 0; i < compareanswerresults.length; i++){  if (compareanswerresults[i]!=undefined){    displaycompareanswerresults=displaycompareanswerresults+compareanswerresults[i];  }}]]></SCR>			</RES>		</INT>		<SCR name="set button label and width and position"><![CDATA[if(mytracking[rootIcon.currentPage]!=undefined){  myrs.text=mytracking[rootIcon.currentPage];}myrs.multiline = true;//if an optional button label has been set change the labelif (pageIcon.templateData.modelAnswer[projPI].label != undefined){  feedbackBtnTxt=pageIcon.templateData.modelAnswer[projPI].label;  //change the button width  //there may well be a better equation than the following but this does work  feedbackBtnWidth=pageIcon.templateData.modelAnswer[projPI].label.length*6+25;}btnY = nextY +100 + 20;feedbackY=btnY+40;_level0.XTSetPageType(rootIcon.getPageIndex() - pgOffset + 1, 'text', 1, 0.0);// Start interaction tracking_level0.XTEnterInteraction(rootIcon.getPageIndex() - pgOffset + 1, 0, 'text', pageIcon.templateData.modelAnswer[projPI].prompt,"", pageIcon.templateData.modelAnswer[projPI].feedback, "");]]></SCR>		<INT name="button interaction" perpetual="1">			<RES toolTip="{feedbackBtnTip}" id="btn" w="feedbackBtnWidth" rs="btn" swf="templatePath + 'common/button.swf'" name="button" type="button" x="prpt._x" y="btnY" label="{feedbackBtnTxt}" erase="1" exit="0">				<SCR name="set feedback"><![CDATA[modleanswerfeedback=pageIcon.templateData.modelAnswer[projPI].feedback + chr(13) + chr(13);if (pageIcon.templateData.modelAnswer[projPI].copypasteinfo != undefined){modleanswerfeedback=modleanswerfeedback + '<font size="10" color="#ff3333">'+pageIcon.templateData.modelAnswer[projPI].copypasteinfo+'</font>';}_level0.XTExitInteraction(rootIcon.getPageIndex()  - pgOffset + 1, 0, true, "", myrs.text, "");_level0.XTSetPageScore(rootIcon.getPageIndex()  - pgOffset + 1, 0.0);]]></SCR>				<DIS id="feedback" scrolling="auto" textColour="#333333" name="feedback" x="prpt._x" y="feedbackY" w="panelW - 40" h="474 - (feedbackY + btn._height) " type="text"><![CDATA[{modleanswerfeedback}]]></DIS>				<SCR name="copy to clipboard"><![CDATA[texttopaste= instructHeaderATxt + " " + (rootIcon.currentPage+1) + " " + instructHeaderBTxt + " " + chr(13)+chr(10);texttopaste=texttopaste+pageIcon.templateData.modelAnswer[projPI].prompt+chr(13)+chr(10)+chr(13)+chr(10);texttopaste=texttopaste + responseHeaderTxt + " "+chr(13)+chr(10);if (mytracking[rootIcon.currentPage]!=undefined){texttopaste=texttopaste+mytracking[rootIcon.currentPage] +chr(13)+chr(10)+chr(13)+chr(10);}else{texttopaste=texttopaste + noAnswerHeaderTxt + " " +chr(13)+chr(10)+chr(13)+chr(10);}texttopaste=texttopaste + exampleHeaderTxt + " " +chr(13)+chr(10);texttopaste=texttopaste+pageIcon.templateData.modelAnswer[projPI].feedback;System.setClipboard(texttopaste);]]></SCR>			</RES>		</INT>		<SCR name="compare answer results"><![CDATA[//myrs.text=mytracking[rootIcon.currentPage];//create the array if not yet createdif (compareanswerresults == undefined){   compareanswerresults = new Array();}//build the combined resultscompareanswercombined= instructHeaderATxt + " " + (rootIcon.currentPage+1)+" " + instructHeaderBTxt +chr(13)+chr(10);compareanswercombined=compareanswercombined+pageIcon.templateData.modelAnswer[projPI].text+" "+chr(13)+chr(10)+chr(13)+chr(10);compareanswercombined=compareanswercombined+pageIcon.templateData.modelAnswer[projPI].prompt+" "+chr(13)+chr(10)+chr(13)+chr(10);compareanswercombined=compareanswercombined+responseHeaderTxt+" "+chr(13)+chr(10);//if the current question has been answered add response to combined result //but if not add you didn't answer this questionif (mytracking[rootIcon.currentPage]!=undefined){compareanswercombined=compareanswercombined+mytracking[rootIcon.currentPage]+" "+chr(13)+chr(10)+chr(13)+chr(10);}else{  compareanswercombined=compareanswercombined+noAnswerHeaderTxt+" "+chr(13)+chr(10)+chr(13)+chr(10);}compareanswercombined=compareanswercombined+exampleHeaderTxt+" "+chr(13)+chr(10);compareanswercombined=compareanswercombined+pageIcon.templateData.modelAnswer[projPI].feedback+" "+chr(13)+chr(10)+chr(13)+chr(10);compareanswercombined=compareanswercombined+" ----------------------------------------------------------- "+chr(13)+chr(10)+chr(13)+chr(10);compareanswerresults[(rootIcon.currentPage)]=compareanswercombined;//initailize variabledisplaycompareanswerresults="";//loop through array and only add to var if not undefinedfor (i = 0; i < compareanswerresults.length; i++){  if (compareanswerresults[i]!=undefined){    displaycompareanswerresults=displaycompareanswerresults+compareanswerresults[i];  }}]]></SCR>	</PG>