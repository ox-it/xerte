	<PG title="Drag Drop Label" name="dragDropLabel">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (rootIcon.projMode == "dev"){   // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();}  rootIcon.setTitleText(templateData.learningObject[0].name);  // handle multiple page data definitions in a project if (rootIcon.projectPageIndex == undefined){     rootIcon.projectPageIndex = 0;}// check if this page has a definition for the current project index and default to 0 if notif (pageIcon.templateData.dragDropLabel[rootIcon.projectPageIndex].name == undefined){  projPI = 0;} else {  projPI = rootIcon.projectPageIndex; }  if (pageIcon.templateData.dragDropLabel[projPI].tryAgainTxt != undefined){  tryAgainTxt = pageIcon.templateData.dragDropLabel[projPI].tryAgainTxt;} else {  tryAgainTxt = "Try again!";}if (pageIcon.templateData.dragDropLabel[projPI].narration != undefined){  narration = pageIcon.templateData.dragDropLabel[projPI].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS h="474" w="760" tabIndex="-1" id="panel" name="panel" x="20" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<DIS tabIndex="21" toolTip="{pageIcon.templateData.dragDropLabel[projPI].tip}" scrolling="auto" id="graphic" name="graphic" x="coded" y="30" type="ext" url="{pageIcon.templateData.dragDropLabel[projPI].url}"><![CDATA[{pageIcon.templateData.page[0].text[0].tip}]]></DIS>		<INT name="loadImage" perpetual="0">			<RES name="onLoad" type="event" eventName="onLoad" icon="graphic" erase="1" exit="1">				<SCR name="calculate"><![CDATA[//resize the image if it's too big or too widemaxWidth = 500;maxHeight = 454;scale = 1;initHeight = graphic._height;initWidth = graphic._width;graphic.constrain(maxWidth, maxHeight);scale = graphic._width / initWidth;if (pageIcon.templateData.dragDropLabel[projPI].align == 'Left'){  graphic._x = 770 - graphic._width;  textX = 30;} else {  graphic._x = 30;  textX = graphic._x + graphic._width + 20;}textWidth = 720 - graphic._width;cols = Math.floor((stageWidth - panel._width) / 100);]]></SCR>			</RES>		</INT>		<DIS scrolling="auto" textColour="#333333" tabIndex="20" id="textBlock" h="480" name="text" x="textX" y="30" w="textWidth" type="text"><![CDATA[{pageIcon.templateData.dragDropLabel[projPI].text}]]></DIS>		<SCR name="makeHotspots&Labels"><![CDATA[hsData = pageIcon.templateData.dragDropLabel[projPI];if (icon.attributes.built != "true"){  //dupe the labels and make ids  icon.nextSibling.childNodes[0].firstChild.duplicate(hsData.hotspot.length - 1);  for (i = 0; i < hsData.hotspot.length; i++){    icon.nextSibling.childNodes[0].childNodes[i].attributes.id = 'lbl'+i;  }  //do the targets  icon.nextSibling.childNodes[1].firstChild.firstChild.duplicate(hsData.hotspot.length - 1);  //make the dragItems property  catchAllStr = "";  for (i = 0; i < hsData.hotspot.length; i++){        icon.nextSibling.childNodes[1].firstChild.childNodes[i].attributes.name = hsData.hotspot[i].text;    icon.nextSibling.childNodes[1].firstChild.childNodes[i].attributes.dragItems = 'lbl'+i+'~leave~1';    catchAllStr += 'lbl'+i+'~replace~0,';  }  icon.nextSibling.childNodes[1].firstChild.lastChild.attributes.dragItems = catchAllStr;  icon.attributes.built = "true";}]]></SCR>		<DEC id="dec" name="labels&Targets" repeat="all" branch="sequence" pause="0" erase="0" eraseOnExit="0">			<PG name="labels">				<DIS textColour="#333333" id="myLabel" name="protoLabel" x="textBlock._x + 5 + Math.floor(icon.index()% cols) * 100" y="textBlock._y + textBlock._height  + 10+ Math.floor(icon.index() / cols) * 30" w="300" h="10" type="text"><![CDATA[{hsData.hotspot[icon.index()].name}]]></DIS>				<SCR name="drawLabels"><![CDATA[minX = textX;maxX = textX + textWidth;curY = textBlock._y + textBlock._height + 15;curX = textX;for (i = 0; i < icon.parentNode.childNodes.length - 1; i++){  tempClip = icon.parentNode.childNodes[i].getMovieClip();  tempClip.txt._width = tempClip.getTextWidth() + 2;  tempClip.lineStyle(1,STYLES.titleBarColour,100);  tempClip.beginFill(0xFFFFFF,100);  tempClip.drawRect(0,0,tempClip.getTextWidth(), 20 + (12 - STYLES.defaultSize)*-1 / 2);  //position them...  tempClip._x = curX;  tempClip._y = curY;  if (tempClip._x + tempClip._width > maxX){    tempClip._x = textX;    tempClip._y += 24;    curY += 24;    curX = textX + tempClip._width + 5;  } else {    curX += tempClip._width + 5;  }}]]></SCR>			</PG>			<PG name="targets">				<INT id="drop" name="targets" perpetual="1">					<RES rs="tgt0" name="protoTarget" type="targetArea" x="graphic._x + Number(hsData.hotspot[icon.index()].x)*scale" y="graphic._y + Number(hsData.hotspot[icon.index()].y)*scale" w="Number(hsData.hotspot[icon.index()].w)*scale" h="Number(hsData.hotspot[icon.index()].h)*scale" dragItems="setByCode" erase="0" exit="0">						<SCR name="handleDrop"><![CDATA[hs = drop.responses[icon.parentNode.index()];hs.tabIndex = -1;fbTxt = '<b>' + hsData.hotspot[icon.parentNode.index()].name + '</b><br>' +  hsData.hotspot[icon.parentNode.index()].text;dec.broadcast('showFeedback');drop.objectDropped._x = hs._x + 3;drop.objectDropped._y = hs._y + 3;drop.objectDropped.onRollOver = fDummy;drop.objectDropped.onRollOut = fDummy;drop.objectDropped.onRelease = fClickHandler;drop.objectDropped.useHandCursor = false;drop.objectDropped.tabIndex = -1;]]></SCR>						<INT name="showInfo" perpetual="0">							<RES name="infoHotspot" type="hotSpot" x="hs._x" y="hs._y" w="hs._width" h="hs._height" click="1" cursor="1" erase="1" exit="0">								<SCR name="showInfo"><![CDATA[tempIndex = icon.parentNode.parentNode.parentNode.index();fbTxt = '<b>' + hsData.hotspot[tempIndex].name + '</b><br>' +  hsData.hotspot[tempIndex].text;dec.broadcast('showFeedback');]]></SCR>							</RES>						</INT>					</RES>					<RES tabIndex="-1" name="catchAll" type="targetArea" x="graphic._x" y="graphic._y" w="graphic._width" h="graphic._height" dragItems="setByCode" erase="1" exit="0">						<SCR name="handleMiss"><![CDATA[fb.setText("<b>" + tryAgainTxt + "</b>");fb.clear();fb.fade('out', 0.3, 'None', 'easeNone',2);]]></SCR>					</RES>				</INT>				<SCR name="highlight"><![CDATA[alpha = (pageIcon.templateData.dragDropLabel[projPI].showHighlight == 'false' ? 0 : 100);for (i = 0; i < drop.responses.length - 1; i++){  tempTarget = drop.responses[i];  tempTarget.lineStyle(1, pageIcon.templateData.dragDropLabel[projPI].highlightColour, alpha);  tempTarget.drawRect(0,0,tempTarget._width,tempTarget._height);}]]></SCR>			</PG>		</DEC>		<INT name="feedback" perpetual="0">			<RES name="showFeedback" type="event" eventName="showFeedback" icon="dec" erase="1" exit="0">				<DIS scrolling="auto" textColour="#000000" tabIndex="-1" id="fb" name="feedback" x="textX + 5" y="curY + 40" w="textWidth -10" h="434 - curY" type="text"><![CDATA[{fbTxt}]]></DIS>				<SCR name="[Untitled]"><![CDATA[fb.tabIndex = 263;fb.clear();fb.beginFill(0xFFFFCC,100);fb.lineStyle(0,0x666666,100);fb.drawRect(-5,-5,fb._width + 10,454 - fb._y + 35);fb.fade('in', 0.3, 'None', 'easeNone',2);]]></SCR>			</RES>		</INT>	</PG>